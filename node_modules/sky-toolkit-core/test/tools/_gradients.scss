// =============================================================================
// TEST / TOOLS / GRADIENTS
// =============================================================================

@import "../../tools/gradients";

// Test configuration
// ===========================================

@mixin gradients_before {
  $gradients: (
    testkey: (
      start: #000,
      end: #fff
    )
  ) !global;
}

// Background gradient mixin
// ===========================================

@include test-module("@mixin background-gradient") {
  @include gradients_before();

  @include test("should return a vertical linear gradient for the given key when no direction is set") {
    @include assert("compiles vertical linear gradient") {
      @include input() {
        @include background-gradient(testkey);
      }

      @include expect() {
        background-color: #fff;
        background-image: -webkit-linear-gradient(top, #000 0%, #fff 100%);
        background-image: -moz-linear-gradient(top, #000 0%, #fff 100%);
        background-image: -o-linear-gradient(top, #000 0%, #fff 100%);
        background-image: linear-gradient(to bottom, #000 0%, #fff 100%);
      }
    }
  }

  @include test("should return a vertical linear gradient for the given key when a vertical direction is set") {
    @include assert("compiles vertical linear gradient") {
      @include input() {
        @include background-gradient(testkey, "vertical");
      }

      @include expect() {
        background-color: #fff;
        background-image: -webkit-linear-gradient(top, #000 0%, #fff 100%);
        background-image: -moz-linear-gradient(top, #000 0%, #fff 100%);
        background-image: -o-linear-gradient(top, #000 0%, #fff 100%);
        background-image: linear-gradient(to bottom, #000 0%, #fff 100%);
      }
    }
  }

  @include test("should return a horizontal linear gradient for the given key when a horizontal direction is set") {
    @include assert("compiles horizontal linear gradient") {
      @include input() {
        @include background-gradient(testkey, "horizontal");
      }

      @include expect() {
        background-color: #fff;
        background-image: -webkit-linear-gradient(left, #000 0%, #fff 50%, #000 100%);
        background-image: -moz-linear-gradient(left, #000 0%, #fff 50%, #000 100%);
        background-image: -o-linear-gradient(left, #000 0%, #fff 50%, #000 100%);
        background-image: linear-gradient(to right, #000 0%, #fff 50%, #000 100%);
      }
    }
  }

  @include test("should return a radial gradient for the given key when a radial direction is set") {
    @include assert("compiles radial linear gradient") {
      @include input() {
        @include background-gradient(testkey, "radial");
      }

      @include expect() {
        background-color: #fff;
        background-image: -webkit-radial-gradient(center, ellipse cover, #fff 0%, #000 100%);
        background-image: -moz-radial-gradient(center, ellipse cover, #fff 0%, #000 100%);
        background-image: -o-radial-gradient(center, ellipse cover, #fff 0%, #000 100%);
        background-image: radial-gradient(ellipse at center, #fff 0%, #000 100%);
      }
    }
  }
}
